% I defined the parameters
g=9.81;
Time=18.1;
dt=0.01;

t = 0:dt:Time; % Create a time vector from 0 to Time with increments of dt
n=length(t);
S=zeros(1,n);
a=zeros(1,n);
v=zeros(1,n);

% Drone mass and thrust data
num_of_propellers = 4;
thrust_per_proeller = 394; %estimated thrust per propeller(grams)
thrust_total = num_of_propellers * thrust_per_proeller; % Total thrust generated by the drone
m = 150*0.001; %estimated drone weight(kilograms)

%Convert grams to newtons (Using 1gram = 0.00981N)
thrust_total_N = thrust_total * 0.00981; % Convert total thrust to newtons
drone_weight_N = m * g; % Convert drone weight to newtons

% Calculate acceleration, velocity, and position over time using Eulers method
for i = 1:n-1
    % Realistic thrust: 1.2Ã— weight during takeoff
     if t(i) <= 2
        thrust_now = 1.5 * m * g;  % Takeoff (20%+ more thrust)
    elseif t(i) <= 5
        thrust_now = 1.0 * m * g;  % Hover (just equal to weight)
    else
        thrust_now = 0.8 * m * g;  % Landing (gentle descent)
    
    end

    a(i) = (thrust_now - m * g) / m;
    v(i+1) = v(i) + a(i) * dt;
    S(i+1) = S(i) + v(i) * dt;
end


plot(t, S);
xlabel('Time (s)');
ylabel('Altitude (m)');
title('Drone Hover Simulation');
